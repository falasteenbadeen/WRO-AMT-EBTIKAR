#include <Servo.h>
const int trigPin = 2;
const int echoPin = 3;
const int trigPinLeft = 6;
const int echoPinLeft = 7;
const int trigPinRight = 4;
const int echoPinRight = 5;

const int motor1Pin1 = 8; // H-bridge input 1
const int motor1Pin2 = 9; // H-bridge input 2
const int servoPin = 10;  // Servo control pin
int motospeed = 90;
int motospeedlow = 90;

Servo steeringServo;

long duration;
long durationLeft;
long durationRight;
int distance ;
int distanceLeft;
int distanceRight;
void setup() {
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(trigPinLeft, OUTPUT);
  pinMode(echoPinLeft, INPUT);
  pinMode(trigPinRight, OUTPUT);
  pinMode(echoPinRight, INPUT);
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);

  steeringServo.attach(servoPin);

  // Initialize the steering angle to the center
 // steeringServo.write(90);
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration / 29 / 2;
  Serial.println(distance);
  digitalWrite(trigPinLeft, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinLeft, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinLeft, LOW);
  durationLeft = pulseIn(echoPinLeft, HIGH);
  distanceLeft = durationLeft / 29 / 2;
  Serial.println( distanceLeft);
  digitalWrite(trigPinRight, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinRight, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinRight, LOW);
  durationRight = pulseIn(echoPinRight, HIGH);
  distanceRight = durationRight / 29 / 2;
  Serial.println(distanceRight);
  // Set a threshold distance for obstacle avoidance
  int thresholdDistance = 40; // Adjust as needed
 
  
}
